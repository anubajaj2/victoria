sap.ui.define([
  "victoria/controller/BaseController",
  "sap/ui/model/json/JSONModel",
  "victoria/models/formatter",
  "sap/m/MessageToast",
  "sap/m/MessageBox",
  "sap/m/Dialog"
],function (BaseController, JSONModel, formatter, MessageToast, MessageBox, Dialog) {
      "use strict";
  return BaseController.extend("victoria.controller.CustomerOrders", {
    formatter: formatter,
    onInit: function () {
      BaseController.prototype.onInit.apply(this);
      debugger;
      //this.getView().byId("idCoDate").setDateValue( new Date());
      //this.getView().getModel("local").setProperty("/customerOrder/Date", new Date());
      //this.getView().byId("idCoDelDate").setDateValue( new Date(), formatter.getFormattedDate(1));
      //this.getView().getModel("local").setProperty("/customerOrder/DelDate", formatter.getFormattedDate(1));

      var oRouter = this.getRouter();
    oRouter.getRoute("customerOrders").attachMatched(this._onRouteMatched, this);
  },

  _onRouteMatched : function(){
  	var that = this;
    that.getView().getModel("local").setProperty("/customerOrder/Date", formatter.getFormattedDate(0));
    that.getView().getModel("local").setProperty("/customerOrder/DelDate", formatter.getFormattedDate(1));
  },

    onValueHelp: function(oEvent){
      this.getCustomerPopup(oEvent);
    },

    onValueHelpMat: function(){
      this.getMaterialPopup();
    },

    onConfirm: function(oEvent){
      //whatever customer id selected push that in local model
        debugger;
        //var myData = this.getView().getModel("local").getProperty("/customerOrder");
        if(oEvent.getSource().getTitle() === "Material Search"){
          var selMat = oEvent.getParameter("selectedItem").getLabel();
          var selMatName = oEvent.getParameter("selectedItem").getValue();
          //this.getView().byId("idCoMaterial").setValue(selMat);
          this.getView().byId("idCoMatName").setValue(selMatName);
          this.getView().getModel("local").setProperty("/customerOrder/Material",
                oEvent.getParameter("selectedItem").getBindingContextPath().split("'")[1]);
          this.getView().getModel("local").setProperty("/coTemp/MaterialCode",
                                                selMat);
          //myData.Material = oEvent.getParameter("selectedItem").getBindingContextPath().split("'")[1];
        }else if (oEvent.getSource().getTitle() === "Karigar Search") {

          var selKarigar = oEvent.getParameter("selectedItem").getLabel();
          var selKarigarName = oEvent.getParameter("selectedItem").getValue();
          //this.getView().byId("idCoKarigar").setValue(selKarigar);
          this.getView().byId("idCoKarigarName").setValue(selKarigarName);
          this.getView().getModel("local").setProperty("/customerOrder/Karigar",
                oEvent.getParameter("selectedItem").getBindingContextPath().split("'")[1]);
          this.getView().getModel("local").setProperty("/coTemp/KarigarCode",
                                                selKarigar);
          //myData.Karigar = oEvent.getParameter("selectedItem").getBindingContextPath().split("'")[1];
        }
        else{
          var selCust = oEvent.getParameter("selectedItem").getLabel();
          var selCustName = oEvent.getParameter("selectedItem").getValue();
          //this.getView().byId("idCoCustomer").setValue(selCust);
          this.getView().byId("idCoCustomerText").setValue(selCustName);
          this.getView().getModel("local").setProperty("/customerOrder/Customer",
                oEvent.getParameter("selectedItem").getBindingContextPath().split("'")[1]);
          this.getView().getModel("local").setProperty("/coTemp/CustomerCode",
                                                selCust);
          //myData.Customer = oEvent.getParameter("selectedItem").getBindingContextPath().split("'")[1];
        }

        //this.getView().getModel("local").setProperty("/customerOrder", myData);
    },

    onTakePic: function() {
//This code was generated by the layout editor.
var that = this;
//Step 1: Create a popup object as a global variable
this.fixedDialog = new Dialog({
title: "Click on Capture to take photo",
beginButton: new sap.m.Button({
text: "Capture Photo",
press: function(oEvent){
// TO DO: get the object of our video player which live camera stream is running
//take the image object out of it and set to main page using global variable
that.imageVal =  document.getElementById("player");
var oPopup = oEvent.getSource();
that.attachName = oPopup.getParent().getContent()[1].getValue();
that.fixedDialog.close();
}
}),
content: [
new sap.ui.core.HTML({
content: "<video id='player' autoplay></video>"
}),
new sap.m.Input({
placeholder: 'please enter image name here',
required: true
})
],
endButton: new sap.m.Button({
text: "Cancel",
press: function(){
that.fixedDialog.close();
}
})
});

this.getView().addDependent(this.fixedDialog);
//Step 2: Launch the popup
this.fixedDialog.open();

this.fixedDialog.attachBeforeClose(this.setImage, this);

var handleSuccess = function(stream){
player.srcObject = stream;
}

navigator.mediaDevices.getUserMedia({
video: true
}).then(handleSuccess);

},

setImage: function(){
//Take the running image from the video stream of camera
var oVBox = this.getView().byId("wow");
var items = oVBox.getItems();
var snapId = 'anubhav-' + items.length;
var textId = snapId + '-text';
var imageVal = this.imageVal;

//set that as a canvas element on HTML page
var oCanvas = new sap.ui.core.HTML({
content: "<canvas id='" + snapId +"' width='320px' height='320px' "+
" style='2px solid red'></canvas> " +
" <label id='" + textId + "'>" + this.attachName + "</label>"
});
oVBox.addItem(oCanvas);
oCanvas.addEventDelegate({
onAfterRendering: function(){
var snapShotCanvas = document.getElementById(snapId);
var oContext = snapShotCanvas.getContext('2d');
oContext.drawImage(imageVal, 0,0, snapShotCanvas.width, snapShotCanvas.height);
}
});


},

    onSave: function(){
      var that = this;
      that.getView().setBusy(true);
      var myData = this.getView().getModel('local').getProperty("/customerOrder");
      debugger;
      myData.Date =  this.getView().byId("idCoDate").getDateValue();
      myData.DelDate = this.getView().byId("idCoDelDate").getDateValue();
      //myData.Qty = this.getView().byId("idCoQty").getValue();
      //myData.Weight = this.getView().byId("idCoWeight").getValue();
      //myData.Making = this.getView().byId("idCoMaking").getValue();
      //myData.Remarks = this.getView().byId("idCoRemarks").getValue();
      //myData.Cash = this.getView().byId("idCoCash").getValue();
      //myData.Gold = this.getView().byId("idCoGold").getValue();
      //myData.Silver = this.getView().byId("idCoSilver").getValue();
      //myData.Picture = this.getView().byId("idCoPicture").getValue();
      this.ODataHelper.callOData(this.getOwnerComponent().getModel(), "/CustomerOrders",
                                "POST", {}, myData, this)
      .then(function(oData) {
        debugger;
        that.getView().setBusy(false);
        sap.m.MessageToast.show("Data Saved Successfully");

      }).catch(function(oError) {
        that.getView().setBusy(false);
        var oPopover = that.getErrorMessage(oError);
      });
      ;
    },

    onDelete: function(){
      debugger;
      var that = this;
      sap.m.MessageBox.confirm("Do you want to delete the selected entries",{
    title: "Confirm",                                    // default
    styleClass: "",                                      // default
    initialFocus: null,                                  // default
    textDirection: sap.ui.core.TextDirection.Inherit,     // default
    onClose : function(sButton){
      debugger;
      if (sButton === MessageBox.Action.OK) {
        var aSelectedLines = that.byId("idCoTable").getSelectedItems();
        if (aSelectedLines.length) {
          for(var i=0; i < aSelectedLines.length; i++){
            var myUrl = aSelectedLines[i].getBindingContext().sPath;
            that.ODataHelper.callOData(that.getOwnerComponent().getModel(), myUrl,
                                      "DELETE", {}, {}, that);
          } //end for
        } //end if aSelectedLines
        sap.m.MessageToast.show("Selected lines are deleted");
      } //end if sButton
    }
});
},
    onClear: function(){
      //this.byId("idCoDate").setValue("");
      //this.byId("idCoDelDate").setValue("");
      this.getView().getModel("local").setProperty("/customerOrder/Date", formatter.getFormattedDate(0));
      this.getView().getModel("local").setProperty("/customerOrder/DelDate", formatter.getFormattedDate(1));
      this.byId("idCoCustomer").setValue("");
      this.byId("idCoCustomerText").setValue("");
      this.byId("idCoMaterial").setValue("");
      this.byId("idCoMatName").setValue("");
      this.byId("idCoQty").setValue("0");
      this.byId("idCoWeight").setValue("0");
      this.byId("idCoMaking").setValue("0");
      this.byId("idCoRemarks").setValue("");
      this.byId("idCoCash").setValue("0");
      this.byId("idCoGold").setValue("0");
      this.byId("idCoSilver").setValue("0");
      this.byId("idCoPicture").setValue("");
      this.byId("idCoKarigar").setValue("");
      this.byId("idCoKarigarName").setValue("");
    },

    onUpdateFinished: function(oEvent){
      var oTable = oEvent.getSource();
      var itemList = oTable.getItems();
      var noOfItems = itemList.length;
      var value1;
      var id;
      var cell;
      debugger;
      for (var i = 0; i < noOfItems; i++) {
        //Read the GUID from the Screen
        var customerId = oTable.getItems()[i].getCells()[2].getText();
        var customerData = this.allMasterData.customers[customerId];
        oTable.getItems()[i].getCells()[2].setText(customerData.CustomerCode + ' - ' + customerData.Name );

        var materialId = oTable.getItems()[i].getCells()[3].getText();
        var materialData = this.allMasterData.materials[materialId];
        oTable.getItems()[i].getCells()[3].setText(materialData.ProductCode + ' - ' + materialData.ProductName );

        //Find the customer data for that Guid in customer collection
        //Change the data on UI table with semantic information
      }
    }

  });
});
