<mvc:View
	controllerName="victoria.controller.Customers"
	xmlns="sap.m"
	xmlns:core="sap.ui.core"
	xmlns:mvc="sap.ui.core.mvc"
	xmlns:semantic="sap.m.semantic"
	xmlns:f="sap.ui.layout.form"
	xmlns:smartField="sap.ui.comp.smartfield"
	xmlns:footerbar="sap.ushell.ui.footerbar"
	xmlns:app="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1">

	<semantic:FullscreenPage
		id="customers"
		navButtonPress="onNavBack"
		showNavButton="true"
		title="Manage Customers"
		busy="{objectView>/busy}"
		busyIndicatorDelay="{objectView>/delay}">

		<semantic:content>
		<f:SimpleForm
			minWidth="1024"
			maxContainerCols="2"
			editable="true"
			layout="ResponsiveGridLayout"
			labelSpanL="3"
			labelSpanM="3"
			emptySpanL="4"
			emptySpanM="4"
			columnsL="1"
			columnsM="1"
			class="editableForm">
			<f:content>
 			    <Label text="Customer Code" labelFor="customerCode" required="true"/>
				<!-- <Input
					id="customerCode"
					type="Text"
					showSuggestion="true"
					value="{customerModel>/Company}"
					suggestionItems="{/Customers}"
					suggestionItemSelected="selectedCustomer">
					<suggestionItems>
						<core:Item text="{Company}" key="{Id}"/>
					</suggestionItems>
				</Input> -->

				<ComboBox value="{customerModel>/CustomerCode}" change="customerCodeCheck"
	items="{customerModelInfo>/results}" enabled="{viewModel>/codeEnabled}" valueState="{dataModel>/CustomerCodeState}" valueStateText="Customer Code cannot be blank"
												>
	<core:Item key="{customerModelInfo>CustomerCode}" text="{customerModelInfo>CustomerCode}" />
</ComboBox>

				<Label text="Name" required="true"/>
				<!-- <ComboBox
					id="idName"
					type="Text"
					value="{customerModel>/FirstName}">
				</ComboBox> -->
				<Input
					id="idName"
					type="Text"
					value="{customerModel>/Name}" valueState="{dataModel>/NameState}" valueStateText="Name cannot be blank"
																change="additionalInfoValidation">
				</Input>

				<Label text="Address"/>
				<Input
					id="idAddress"
					type="Text"
					value="{customerModel>/Address}">
				</Input>

				<Label text="Group" required="true"/>
				<ComboBox
					id="idGroup"
					value="{customerModel>/Group}"
					items="{groupModelInfo>/results}" valueState="{dataModel>/GroupState}" valueStateText="Group cannot be blank"
																change="additionalInfoValidation">
					<core:Item key="{groupModelInfo>groupName}" text="{groupModelInfo>groupName}" />
				</ComboBox>

				<Label text = "Type" required="true"/>
				<Select
					id="idType" 
					selectedKey= "{/typec/0/items}"
					items="{
						path: 'typec>/items'
					}">
					<core:Item key="{typec>text}" text="{typec>text}" />
				</Select>

				<!-- <Label text="Custom Group"/>
				<ComboBox
					id="idCustomGrp"
					selectedKey="{customerModel>/Customgroup}"
					items="{
						path: '/Customgroups'
					}">
					<core:Item key="{Id}" text="{Name}" />
				</ComboBox> -->

				<Label text="City" required="true"/>
				<ComboBox
					items="{cityModelInfo>/results}" valueState="{dataModel>/CityState}" valueStateText="City cannot be blank"
					id="idCity"
					value="{customerModel>/City}"
															change="additionalInfoValidation">
					<core:Item key="{cityModelInfo>cityName}" text="{cityModelInfo>cityName}" />
				</ComboBox>


				<Label text="Mobile Phone"/>
				<Input
					id="idMobilePhone"
					type="Text"
					value="{customerModel>/MobilePhone}">
				</Input>

				<Label text="Secondary Phone"/>
				<Input
					id="idSecondaryPhone"
					type="Text"
					value="{customerModel>/SecondaryPhone}">
				</Input>


				<!-- <Label text="Send SMS"/>
				<Switch
					id="idSendSMS"
					state="{customerModel>/HasInterest}">
				</Switch > -->


			</f:content>
		</f:SimpleForm>

 		</semantic:content>
		<semantic:customFooterContent>
				<Button text="{viewModel>/buttonText}" type="Accept" press="SaveCustomer"/>
				<Button text="Delete" type="Reject" press="deleteCustomer" enabled="{viewModel>/deleteEnabled}"/>
				<Button text="Clear" type="Ghost" press="clearCustomer"/>
		</semantic:customFooterContent>
	</semantic:FullscreenPage>

</mvc:View>
